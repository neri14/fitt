[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fitt"
dynamic = ["version"]
description = "FIT Tools - A collection of tools to work with FIT files."
authors = [{name = "Neri", email = "neri@n3r1.com"}]
license-files = ["LICENSE"]
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Other Audience",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "garmin-fit-sdk>=21.178.0"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "mypy",
]

[project.urls]
Homepage = "https://github.com/neri14/fitt"
Repository = "https://github.com/neri14/fitt"
Issues = "https://github.com/neri14/fitt/issues"

[tool.setuptools.dynamic]
version = {attr = "fitt.__version__"}

[project.scripts]
fitt = "fitt.__main__:main"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["garmin_fit_sdk.*"]
follow_untyped_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["fitt"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]